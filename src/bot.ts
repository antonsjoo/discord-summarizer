import { config } from 'dotenv';
import { Client, GatewayIntentBits, Message, TextChannel } from 'discord.js';
import OpenAI from 'openai';

config();

const MODEL = 'o4-mini'; // Default model, can be changed per command
const VERSION = '1.1.0'; // Bot version

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY
});




client.on('messageCreate', async (message: Message) => {
    if (message.author.bot || !message.channel.isTextBased()) return;

    const content = message.content.trim();
    const channel = message.channel as TextChannel;

    const [command, ...args] = content.split(' ');
    const restOfMessage = args.join(' ');

    switch (command) {
        case '!tldr':
            try {
                const messages = await channel.messages.fetch({ limit: 50 });
                const now = Date.now();
                const recentMessages = messages
                    .filter(msg => now - msg.createdTimestamp < 24 * 60 * 60 * 1000)
                    .reverse()
                    .map(msg => `${msg.author.displayName}: ${msg.content}`)
                    .filter(line => line.trim().length > 0)
                    .slice(-25);

                if (recentMessages.length === 0) {
                    await message.reply('No messages from the past 24 hours to summarize.');
                    return;
                }

                const prompt = `
Du √§r en Discord-bot med sk√∂n ortenjargong ‚Äî en riktig bror fr√•n f√∂rorten. Du snackar som en av grabbarna: sv√§r mycket, har noll filter, men √§r √§nd√• sk√∂n, kvick och har glimten i √∂gat. 

Din uppgift √§r att sammanfatta vad som h√§nt i chatten de senaste 24 timmarna ‚Äî som om du ber√§ttade det f√∂r en polare som precis joinat och ba "ey vad fan har jag missat?". G√∂r det p√• svenska, med samma stil, slang och attityd som deltagarna. Det ska k√§nnas 100% som att det √§r en av dom som √•terber√§ttar det.

Viktigt:
- Hitta INTE p√• skit ‚Äî du √•terber√§ttar bara det som faktiskt skrivits.
- Ignorera helt dina egna meddelanden ‚Äî du snackar inte om dig sj√§lv, fattar du?
- Sv√§r g√§rna och mycket
- H√•ll det tajt, roligt och med lite disrespect om n√•n f√∂rtj√§nade det. Som det snackas i chatten, s√• snackar du. Punkt.

Chatten:
${recentMessages.join('\n')}
`;
                const response = await openai.chat.completions.create({
                    model: MODEL,
                    messages: [{ role: 'user', content: prompt }],
                    max_completion_tokens: 800
                });

                const summary = response.choices[0].message?.content ?? 'No summary generated.';
                await message.reply(summary);
            } catch (error) {
                console.error('Error summarizing messages:', error);
                await message.reply('Failed to summarize messages.');
            }
            break;

        case '!factcheck':
            if (!restOfMessage) {
                await message.reply('Vad vill du att jag ska faktagranska?');
                return;
            }

            try {
                const prompt = `
Du √§r en korrekt, opartisk faktagranskande assistent. Utv√§rdera f√∂ljande p√•st√•ende och avg√∂r om det √§r sant, falskt eller vilseledande. Motivera svaret kort men tydligt p√• svenska.
P√•st√•ende:
"${restOfMessage}"
`;

                const response = await openai.chat.completions.create({
                    model: MODEL,
                    messages: [{ role: 'user', content: prompt }],
                    max_tokens: 300
                });

                const factCheck = response.choices[0].message?.content ?? 'Inget svar genererat.';
                await message.reply(factCheck);
            } catch (error) {
                console.error('Error factchecking:', error);
                await message.reply('Kunde inte faktagranska just nu.');
            }
            break;


        case '!ask':
            if (!restOfMessage) {
                await message.reply('Vad vill du att jag ska svara p√•?');
                return;
            }

            try {
                const prompt = `
Du √§r en bror fr√•n orten med svar p√• allt. Du √§r smart som fan, men snackar inte som n√•n j√§vla professor ‚Äî du f√∂rklarar saker som en grabb som vet vad han snackar om. Rakt, enkelt, fett och p√• svenska.

N√•n st√§ller en fr√•ga, och du ger ett svar som √§r b√•de hj√§lpsamt och med r√§tt jargong. Du f√•r sv√§ra, du f√•r va dryg om fr√•gan √§r dum, men du ska alltid ge ett vettigt svar. Inget bullshit, inget tillgjort, bara √§rlig kunskap med stil.

Fr√•ga:
"${restOfMessage}"
`;

                const response = await openai.chat.completions.create({
                    model: 'gpt-4o-mini',
                    messages: [{ role: 'user', content: prompt }],
                    max_tokens: 300
                });

                const answer = response.choices[0].message?.content ?? 'Inget svar genererat.';
                await message.reply(answer);
            } catch (error) {
                console.error('Error answering question:', error);
                await message.reply('Kunde inte svara p√• fr√•gan just nu.');
            }
            break;
        case '!help':
            const helpMessage = `
**Tillg√§ngliga kommandon:**
- **!tldr**: Sammanfatta de senaste 24 timmarna av ch
atten.
- **!factcheck <p√•st√•ende>**: Faktagranska ett p√•st√•ende.
- **!ask <fr√•ga>**: St√§ll en fr√•ga och f√• ett svar
- **!ping**: Kolla botens respons.
- **!version**: Visa botens version.
- **!help**: Visa denna hj√§lptext.
Anv√§nd kommandona direkt i kanalen d√§r du vill ha svar.
`;
            await message.reply(helpMessage);
            break;
        case '!ping':
            await message.reply('Pong! üèì')
            break
        case '!version':
            await message.reply(`Bot version: ${VERSION}`);
            break
        case '!stats':
            const statsMessage = `
                    **Bot Stats:**
                    - **Anv√§ndare:** ${client.users.cache.size}
                    - **Servrar:** ${client.guilds.cache.size}
                    - **Kanaler:** ${client.channels.cache.size}
                    - **Uptime:** ${Math.floor(client.uptime! / 1000)} sek
                    - **Ping:** ${client.ws.ping} ms
                    
                    `
            await message.reply(statsMessage)
            break
        case '!invite':
            const inviteLink = `https://discord.com/api/oauth2/authorize?client_id=${client.user?.id}&permissions=8&scope=bot%20applications.commands`
            await message.reply(`Bjud in mig till din server: ${inviteLink}`)
            break
        case '!source':
            await message.reply('K√§llkoden finns p√• GitHub: https://github.com/your-repo')
            break
        case '!about':
            const aboutMessage = `
**Om denna bot:**
En enkel Discord-bot som sammanfattar chattar, faktagranskar p√•st√•enden
och svarar p√• fr√•gor med hj√§lp av OpenAI:s GPT-4o-mini-modell. Den √§r designad f√∂r att vara rolig, kvick och direkt, och anv√§nder samma ton och jargong som deltagarna.
Skapad f√∂r att g√∂ra Discord-chattar mer informativa och underh√•llande.
Anv√§nd kommandona direkt i kanalen d√§r du vill ha svar.
`;
            await message.reply(aboutMessage);
            break;

        default:
            break;
    }
});

client.once('ready', () => {
    console.log(`Logged in as ${client.user?.tag}`);


});

client.login(process.env.DISCORD_TOKEN);